// <auto-generated />
using System;
using EmployerTimeManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployerTimeManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250404203148_AddErganiFieldsToCompanyInfo")]
    partial class AddErganiFieldsToCompanyInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("EmployerTimeManagement.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployerTimeManagement.Models.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AFM")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ErganiAA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ErganiApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ErganiPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ErganiUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseProductionApi")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CompanyInfos");
                });

            modelBuilder.Entity("EmployerTimeManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AFM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployerTimeManagement.Models.WorkLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntryTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExitTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("f_afm")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("f_aitiologia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("f_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("f_eponymo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("f_onoma")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("f_reference_date")
                        .HasColumnType("TEXT");

                    b.Property<int>("f_type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkLogs");
                });

            modelBuilder.Entity("EmployerTimeManagement.Models.WorkLog", b =>
                {
                    b.HasOne("EmployerTimeManagement.Models.Employee", "Employee")
                        .WithMany("WorkLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployerTimeManagement.Models.Employee", b =>
                {
                    b.Navigation("WorkLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
